type Track {
  id: ID!
  title: String!
  albums: String!
  bands: [Band]
  duration: Int!
  released: Int!
  genres: [Genre!]!
}
type Code {
  Code: Int!
}
type IncrementTrackViewsResponse {
  "Similar to HTTP status code, represents the status of the mutation"
  code: Int!
  "Indicates whether the mutation was successful"
  success: Boolean!
  "Human-readable message for the UI"
  message: String!
  "Newly updated track after a successful mutation"
  track: Track
}

type Query {
  "Fetch a specific track, provided a tracks's ID"
  track(id: ID!): Track
  "get all tracks"
  tracks: [Track]
}

type Mutation {
  "post tracks"
  createTrack(
    title: String!
    albumId: String!
    bandsIds: [ID]
    duration: Int!
    released: Int!
    genresIds: [ID!]!
  ): IncrementTrackViewsResponse!
  "delate tracks"
  deleteTrack(id: ID!): IncrementTrackViewsResponse!
  "update tracks"
  updateTrack(
    id: ID!
    title: String!
    albumId: String!
    bandsIds: [ID]
    duration: Int!
    released: Int!
    genresIds: [ID!]!
  ): IncrementTrackViewsResponse!
}
