type Track {
  id: ID!
  title: String!
  albums: String!
  bands: [Band]
  duration: Int!
  released: Int!
  genres: [Genre!]!
}
input CreateTrackInput {
  title: String!
  albumsId: String!
  bandsIds: [ID]
  artistsIds: [ID]
  duration: Int!
  released: Int!
  genresIds: [ID!]!
}

input UpdateTrackInput {
  id: ID!
  title: String
  albumsId: String
  bandsId: [ID]
  artistsIds: [ID]
  duration: Int
  released: Int
  genresIds: [ID]
}

type Query {
  Tracks(limit: Int, offset: Int): [Track]
  Track(id: ID!): Track
}

type Mutation {
  createTrack(createTrackInput: CreateTrackInput): Track!
  updateTrack(updateTrackInput: UpdateTrackInput): Track!
  deleteTrack(id: ID!): Delete
}
