interface BaseArtist {
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
}

type Artist implements BaseArtist {
  id: ID!
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [Band]
  instruments: [String]
}

type Query {
  allArtists(limit: Int, offset: Int): [Artist]
  artist(id: ID!): Artist
}

type Mutation {
  createArtist(
    firstName: String
    secondName: String
    middleName: String
    birthDate: String
    birthPlace: String
    country: String
    bandsIds: [ID]
    instruments: [String]
  ): Artist!
  "----------------------"
  updateArtist(
    id: ID!
    firstName: String
    secondName: String
    middleName: String
    birthDate: String
    birthPlace: String
    country: String
    bandsIds: [ID]
    instruments: [String]
  ): Artist!
  "--------------------"
  deleteArtist(id: ID!): Delete
}
